syntax = "proto3";

import "google/protobuf/empty.proto";
import "common/proto/common.proto";

package owl.proxy;
option go_package = "proxypb";

service OwlProxyService {
  // ReceiveTimeSeriesData 中继器接收数据
  rpc ReceiveTimeSeriesData(owl.common.TsData) returns(google.protobuf.Empty);
  // ReceiveTimeSeriesDataArray 中继器批量接收数据
  rpc ReceiveTimeSeriesDataArray(owl.common.TsDataArray) returns(google.protobuf.Empty);

  // ReceiveAgentHeartbeat 接收客户端上报的心跳
  rpc ReceiveAgentHeartbeat(owl.common.AgentInfo) returns(google.protobuf.Empty);
  // ReceiveAgentMetric 接收客户端上报的Metric
  rpc ReceiveAgentMetric(owl.common.Metric) returns(google.protobuf.Empty);
  // ReceiveAgentMetrics 接收客户端上报的批量Metric
  rpc ReceiveAgentMetrics(owl.common.Metrics) returns(google.protobuf.Empty);
  // RegisterAgent 客户端注册
  rpc RegisterAgent(owl.common.AgentInfo) returns(google.protobuf.Empty);
  // ListAgentPlugins 列出客户端需要执行的插件
  rpc ListAgentPlugins(owl.common.HostIdReq) returns(owl.common.Plugins);

  // DownloadPluginFile 下载插件文件
  rpc DownloadPluginFile(DownloadPluginReq) returns(stream PluginFile);
}

message DownloadPluginReq {
  string rel_path = 1;
}

message PluginFile {
  bytes buffer = 1;
}
